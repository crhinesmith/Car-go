{"version":3,"sources":["utils/queries.js","components/Search/index.jsx","utils/mutations.js","components/Card/index.jsx","pages/Home.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/auth.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","utils/reducers.js","utils/actions.js","utils/GlobalState.js","pages/Success.js","pages/Admin.js","pages/OrderHistory.js","components/FavoritesCards.jsx","assets/car.jpg","assets/car2.jpg","pages/WatchList.js","App.js","serviceWorker.js","index.js"],"names":["QUERY_USER","gql","QUERY_CARS","Search","props","useState","searchInput","useQuery","data","loading","cars","className","LOGIN","NEW_USER","CAR_SOLD","Card","useMutation","carSold","error","handleBuyCar","carId","variables","window","location","replace","handleWatchCar","user","car","console","log","map","alt","src","image","make","model","year","mileage","onSubmit","_id","type","xmlns","width","height","fill","viewBox","fillRule","d","Home","load","myCars","updateCar","formState","updateForm","filteredCars","handleSearch","event","preventDefault","searchState","trim","toLowerCase","split","push","id","name","placeholder","onChange","target","value","Jumbotron","children","style","clear","paddingTop","textAlign","NoMatch","role","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","assign","removeItem","Login","email","password","setFormState","login","handleFormSubmit","mutationResponse","Auth","handleChange","to","htmlFor","require","config","Signup","admin","newUser","active","isActive","input","firstName","lastName","checked","for","Nav","loggedIn","href","onClick","logout","reducer","state","action","users","cart","products","CarContext","createContext","Provider","CarProvider","initialState","selectedCar","order","useReducer","dispatch","Success","Admin","class","OrderHistory","orders","parseInt","purchaseDate","toLocaleDateString","index","price","FavoriteCards","title","imageUrl","description","WatchList","dummyData","Car2","Car","display","flexWrap","FavoritesCards","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b19a93c1.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const QUERY_ALL_USERS = gql`\n  query Query {\n    users {\n      _id\n      admin\n      email\n      firstName\n      lastName\n      password\n      watching {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  query User($id: ID!) {\n    user(_id: $id) {\n      _id\n      admin\n      firstName\n      email\n      lastName\n      password\n      watching {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_ORDER = gql`\n  query Order($id: ID!) {\n    order(_id: $id) {\n      _id\n      car {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CARS = gql`\n  {\n    cars {\n      _id\n      image\n      make\n      mileage\n      model\n      year\n    }\n  }\n`;\nexport const QUERY_CAR = gql`\n  query Car($id: ID!) {\n    car(_id: $id) {\n      _id\n      image\n      make\n      mileage\n      model\n      year\n    }\n  }\n`;\n\nexport const QUERY_CAR_BY_MAKE = gql`\n  query Car($make: String!) {\n    carMake(make: $make) {\n      _id\n      image\n      make\n      mileage\n      model\n      year\n    }\n  }\n`;\n\nexport const QUERY_CAR_BY_MODEL = gql`\n  query Car($model: String!) {\n    carModel(model: $model) {\n      _id\n      image\n      make\n      mileage\n      model\n      year\n    }\n  }\n`;\n\nexport const QUERY_CAR_BY_MILEAGE = gql`\n  query CarsByMileage($minimumMileage: Int!, $maximumMileage: Int!) {\n    carsByMileage(\n      minimumMileage: $minimumMileage\n      maximumMileage: $maximumMileage\n    ) {\n      _id\n      image\n      make\n      mileage\n      model\n      year\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query CarsByMileage($car: [ID]!) {\n    checkout(car: $car) {\n      session\n    }\n  }\n`;\n","import { useQuery } from \"@apollo/client\";\nimport React, { useState } from \"react\";\nimport { QUERY_CARS } from \"../../utils/queries\";\nimport Home from \"../../pages/Home\";\nimport Card from \"../Card\";\n\nexport function Search({ props }) {\n  const [formState, updateForm] = useState({ searchInput: \"\" });\n\n  const { loading, data } = useQuery(QUERY_CARS);\n  // check and set the car data to variable\n\n  const carData = data?.cars;\n\n  function handleSearch(event) {\n    event.preventDefault();\n    try {\n      // get the values from the form\n      const searchState = formState.searchInput.trim().toLowerCase().split(\" \");\n\n      // filter cards that match search\n      const filteredCars = [];\n      carData.filter((car) => {\n        if (\n          car.make.toLowerCase() == searchState[0] ||\n          car.make.toLowerCase() == searchState[1]\n        ) {\n          filteredCars.push(car);\n        }\n      });\n      console.log(\"you searched for:\", filteredCars[0].make);\n      // pass array of matches to the cards\n      return filteredCars;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  function handleTextChange(event) {\n    const { name, value } = event.target;\n    updateForm({\n      ...formState,\n      [name]: value,\n    });\n  }\n  return (\n    <div className=\"search\">\n      {/* <input placeholder=\"Enter name\" />\n      <button>Log value</button> */}\n    </div>\n  );\n}\n","import { gql } from \"@apollo/client\";\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!, $admin: Boolean!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        admin\n        email\n        firstName\n        lastName\n        password\n        watching {\n          _id\n          image\n          make\n          mileage\n          model\n          year\n        }\n      }\n    }\n  }\n`;\n\nexport const NEW_USER = gql`\n  mutation NewUser($input: NewUserInput!) {\n    newUser(input: $input) {\n      token\n      user {\n        email\n        firstName\n        lastName\n        admin\n      }\n    }\n  }\n`;\n\nexport const NEW_CAR = gql`\n  mutation NewCar($input: NewCarInput!) {\n    newCar(input: $input) {\n      _id\n      image\n      make\n      mileage\n      model\n      year\n    }\n  }\n`;\n\nexport const ADD_CAR_TO_WATCHLIST = gql`\n  mutation AddCarToWatchlist($carId: ID!) {\n    addCarToWatchlist(carId: $carId) {\n      _id\n      admin\n      email\n      firstName\n      lastName\n      password\n      watching {\n        _id\n        image\n        make\n        mileage\n        model\n        year\n      }\n    }\n  }\n`;\n\nexport const REMOVE_CAR_FROM_WATCHLIST = gql`\n  mutation RemoveCarFromWatchlist($carId: ID!) {\n    removeCarFromWatchlist(carId: $carId) {\n      _id\n      admin\n      email\n      firstName\n      lastName\n      password\n      watching {\n        _id\n        image\n        make\n        mileage\n        model\n        year\n      }\n    }\n  }\n`;\n\nexport const CAR_SOLD = gql`\n  mutation CarSold($carId: ID!) {\n    carSold(carId: $carId) {\n      _id\n      image\n      make\n      mileage\n      model\n      year\n    }\n  }\n`;\n","import React from \"react\";\nimport { Search } from \"../Search\";\nimport { CAR_SOLD } from \"../../utils/mutations\";\nimport { useMutation } from \"@apollo/client\";\n\nconst Card = (props) => {\n  // handle the cars data from home page\n  const cars = props.cars;\n  const [carSold, { error }] = useMutation(CAR_SOLD);\n  // add buy logic\n  async function handleBuyCar(carId) {\n    try {\n      const { data } = await carSold({\n        variables: { carId: carId },\n      });\n      window.location.replace(\"/success\");\n    } catch (err) {\n      if (err) {\n        window.location.replace(\"/fail\");\n      }\n    }\n\n    // get user and car to say thank you User and show car\n\n    // add incoming car to success page props\n    // return the success page\n  }\n\n  // add wactch logic\n  function handleWatchCar(user, car) {\n    console.log(\"watch car\");\n    // find the user\n    // add the car to the users watchlist\n  }\n\n  return (\n    <div className=\"container d-flex flex-column justify-content-center\">\n      <Search />\n      <div className=\"row justify-content-center\">\n        {/* loop cars array data to show cards */}\n        {cars.map((car) => (\n          <div className=\"cardBox\" key={car._id}>\n            <img\n              className=\"cardImg\"\n              alt=\"pic of car\"\n              src={`${car.image}`}\n            ></img>\n            <p className=\"makeLabel\">Make: {car.make} </p>\n            <p className=\"modelLabel\">Model: {car.model}</p>\n            <p className=\"yearLabel\">Year: {car.year}</p>\n            <p className=\"mileageLabel\">Mileage: {car.mileage}</p>\n\n            <form onSubmit={() => handleBuyCar(car._id)} className=\"my-2\">\n              <button className=\"cardButton\" type=\"submit\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"20\"\n                  height=\"20\"\n                  fill=\"currentColor\"\n                  className=\"bi bi-bag-plus-fill m-1\"\n                  viewBox=\"0 0 16 16\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M10.5 3.5a2.5 2.5 0 0 0-5 0V4h5v-.5zm1 0V4H15v10a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V4h3.5v-.5a3.5 3.5 0 1 1 7 0zM8.5 8a.5.5 0 0 0-1 0v1.5H6a.5.5 0 0 0 0 1h1.5V12a.5.5 0 0 0 1 0v-1.5H10a.5.5 0 0 0 0-1H8.5V8z\"\n                  />\n                </svg>\n                Buy\n              </button>\n            </form>\n            <form onSubmit={handleWatchCar} className=\"my-2\">\n              <button className=\"cardButton\" type=\"submit\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"20\"\n                  height=\"20\"\n                  fill=\"currentColor\"\n                  className=\"bi bi-eye m-1\"\n                  viewBox=\"0 0 16 16\"\n                >\n                  <path d=\"M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.133 13.133 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.133 13.133 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5c-2.12 0-3.879-1.168-5.168-2.457A13.134 13.134 0 0 1 1.172 8z\" />\n                  <path d=\"M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z\" />\n                </svg>\n                Watch\n              </button>\n            </form>\n          </div>\n        ))}\n        {cars.map((car) => (\n          <div className=\"cardBox\" key={car._id}>\n            <img\n              className=\"cardImg\"\n              alt=\"pic of car\"\n              src={`${car?.image}`}\n            ></img>\n            <p className=\"makeLabel\">Make: {car.make} </p>\n            <p className=\"modelLabel\">Model: {car.model}</p>\n            <p className=\"yearLabel\">Year: {car.year}</p>\n            <p className=\"mileageLabel\">Mileage: {car.mileage}</p>\n\n            <form onSubmit={handleBuyCar} className=\"my-2\">\n              <button className=\"cardButton\" type=\"submit\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"20\"\n                  height=\"20\"\n                  fill=\"currentColor\"\n                  className=\"bi bi-bag-plus-fill m-1\"\n                  viewBox=\"0 0 16 16\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M10.5 3.5a2.5 2.5 0 0 0-5 0V4h5v-.5zm1 0V4H15v10a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V4h3.5v-.5a3.5 3.5 0 1 1 7 0zM8.5 8a.5.5 0 0 0-1 0v1.5H6a.5.5 0 0 0 0 1h1.5V12a.5.5 0 0 0 1 0v-1.5H10a.5.5 0 0 0 0-1H8.5V8z\"\n                  />\n                </svg>\n                Buy\n              </button>\n            </form>\n            <form onSubmit={handleWatchCar} className=\"my-2\">\n              <button className=\"cardButton\" type=\"submit\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"20\"\n                  height=\"20\"\n                  fill=\"currentColor\"\n                  className=\"bi bi-eye m-1\"\n                  viewBox=\"0 0 16 16\"\n                >\n                  <path d=\"M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.133 13.133 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.133 13.133 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5c-2.12 0-3.879-1.168-5.168-2.457A13.134 13.134 0 0 1 1.172 8z\" />\n                  <path d=\"M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z\" />\n                </svg>\n                Watch\n              </button>\n            </form>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"../components/Card\";\nimport { Search } from \"../components/Search\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_CARS } from \"../utils/queries\";\n\nconst Home = () => {\n  const { loading, data } = useQuery(QUERY_CARS);\n  const load = data?.cars ?? [];\n\n  // check and set the car data to variable\n  const [myCars, updateCar] = useState(data?.cars ?? []);\n\n  const [formState, updateForm] = useState({ searchInput: \"\" });\n  let filteredCars = myCars;\n\n  const handleSearch = async (event) => {\n    event.preventDefault();\n\n    try {\n      // get the values from the form\n      const searchState = formState.searchInput.trim().toLowerCase().split(\" \");\n\n      // filter cards that match search\n      load.map((car) => {\n        if (\n          car.make.toLowerCase() === searchState[0] ||\n          car.make.toLowerCase() === searchState[1]\n        ) {\n          filteredCars = [];\n          filteredCars.push(car);\n        } else if (\n          car.make.toLowerCase() === \"\" ||\n          car.make.toLowerCase() === \"\"\n        ) {\n          filteredCars = myCars;\n        }\n      });\n      console.log(\"you searched for:\", filteredCars);\n      // pass array of matches to the cards\n\n      updateCar(filteredCars);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  function handleTextChange(event) {\n    const { name, value } = event.target;\n    updateForm({\n      ...formState,\n      [name]: value,\n    });\n  }\n\n  const changeCars = () => {\n    if (!loading && load) {\n      return updateCar(() => load);\n    } else {\n      return updateCar(filteredCars);\n    }\n  };\n\n  return (\n    <section className=\"container d-flex justify-content-center flex-column my-2 py-3\">\n      <div className=\"search d-flex justify-content-center mb-4\">\n        <form\n          id=\"searchForm\"\n          className=\"searchForm d-flex\"\n          onSubmit={handleSearch}\n        >\n          <input\n            className=\"searchBar\"\n            id=\"searchInput\"\n            name=\"searchInput\"\n            placeholder=\"Search Cars\"\n            onChange={handleTextChange}\n          />\n          <button className=\"searchButton\" type=\"submit\">\n            Search\n          </button>\n        </form>\n      </div>\n\n      {filteredCars[0] ? <Card cars={myCars} /> : <Card cars={load} />}\n    </section>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Please login to complete this action</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\nimport { LOGIN } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1 loginBox\">\n      <div className=\"text-left\">\n        <Link to=\"/signup\">← Signup </Link>\n      </div>\n\n      <h2>Login</h2>\n      <form className=\"d-flex flex-column \" onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"email@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row justify-content-center\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport Auth from \"../utils/auth\";\nimport { NEW_USER } from \"../utils/mutations\";\n\nrequire(\"dotenv\").config()\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\", admin: \"\" });\n  const [newUser] = useMutation(NEW_USER);\n  const [active, isActive]= useState(false) \n\n\n  const handleFormSubmit = async (event) => {\n    \n    event.preventDefault();\n    const mutationResponse = await newUser({\n      variables: {\n        input:{\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n        email: formState.email,\n        password: formState.password,\n        admin: true\n        }\n      },\n    });\n    const token = mutationResponse.data.newUser.token;\n    Auth.login(token);\n    console.log(mutationResponse);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    if(event.target.type===\"checkbox\") {\n      isActive(!active) \n      console.log(\"helloworld\", active);\n    }\n    console.log(\"value\", value)\n    setFormState({\n      ...formState,\n      [name]: value, \n    });\n  };\n\n  return (\n    <div className=\"container my-1 signupBox\">\n      <div className=\"text-left\">\n        <Link to=\"/login\">← Go to Login</Link>\n      </div>\n\n      <h2>Signup</h2>\n      <form className=\"d-flex flex-column\" onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"email@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-check\">\n  <input className=\"form-check-input\" type=\"checkbox\" name=\"admin\" admin=\"checked\" checked={active} onChange={handleChange}></input>\n  <label className=\"form-check-label\" for=\"Admin\">\n    Admin\n  </label>\n</div>\n        <div className=\"flex-row justify-content-center\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\n\nfunction Nav() {\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">Order History</Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/login\">Login</Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"d-flex justify-content-around py-1\">\n      <Link to=\"/\">\n        <span className=\"logo\" role=\"img\" aria-label=\"wheel\">\n          <h1>Car-G🛞</h1>\n        </span>\n      </Link>\n\n      <nav>{showNavigation()}</nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import { useReducer } from 'react';\nimport {\n  QUERY_ALL_USERS,\n  QUERY_USER,\n  CREATE_ORDER,\n  QUERY_CARS,\n  QUERY_CAR\n} from './actions';\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n\n    case QUERY_ALL_USERS:\n      return {\n        ...state,\n        users: [...action.users],\n      };\n\n    case QUERY_USER:\n      return {\n        ...state,\n        user: [ ...action.users],\n      };\n\n    case CREATE_ORDER:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n    case QUERY_CARS:\n      return {\n        ...state,\n        cars: [...action.cars]\n      };\n    case QUERY_CAR:\n        return {\n          ...state,\n          car: [...action.car]\n        };\n    default:\n      return state;\n  }\n};\n\nexport function useCarReducer(initialState) {\n  return useReducer(reducer, initialState);\n}\n","export const QUERY_ALL_USERS = \"QUERY_ALL_USERS\";\n\nexport const QUERY_USER = \"QUERY_USER\";\nexport const CREATE_ORDER = \"CREATE_ORDER\";\nexport const QUERY_CARS = \"QUERY_CARS\";\nexport const QUERY_CAR = \"QUERY_CAR\";\nexport const QUERY_CAR_BY_MAKE = \"QUERY_CAR_BY_MAKE\";\nexport const QUERY_CAR_BY_YEAR = \"QUERY_CAR_BY_YEAR\";\n\nexport const QUERY_CAR_BY_MILEAGE = \"QUERY_CAR_BY_MILEAGE\";\nexport const CHECKOUT = \"CHECKOUT\";\nexport const CREATE_USER = \"CREATE_USER\";\nexport const CREATE_CAR = \"CREATE_CAR\";\nexport const ADD_CAR_TO_WATCHLIST = \"ADD_CAR_TO_WATCHLIST\";\nexport const REMOVE_CAR_FROM_WATCHLIST = \"REMOVE_CAR_FROM_WATCHLIST\";\nexport const CAR_SOLD= \"CAR_SOLD\";\n","import React, { createContext, useContext } from \"react\";\nimport { useCarReducer } from './reducers'\n\nconst CarContext = createContext();\nconst { Provider } = CarContext;\n\nconst CarProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useCarReducer({\n    users: [],\n    user: [],\n    cars: [],\n    selectedCar: [],\n    order: []\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useCarContext = () => {\n  return useContext(CarContext);\n};\n\nexport { CarProvider, useCarContext };\n","import React from \"react\";\n\nimport Jumbotron from \"../components/Jumbotron\";\n\n\nfunction Success() {\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Purchase success!</h1>\n        <h2>Thank you for your purchase with Car-Go!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","const Admin = () => {\n    return (\n    <>\n<div class=\"form-group\">\n    <center><h1><u className=\"thick\">Adding a Car to your Account</u></h1></center>\n    <br />\n    <br />\n    <br />\n    <h2 className=\"heading\">Owner Details</h2>\n    <div className=\"controls\">\n      <input type=\"text\" id=\"name\" className=\"floatLabel\" name=\"name\"></input>\n      <label for=\"name\">Name</label>\n    </div>\n    <div className=\"controls\">\n      <input type=\"text\" id=\"email\" className=\"floatLabel\" name=\"email\"></input>\n      <label for=\"email\">Email</label>\n    </div>       \n    <div className=\"controls\">\n      <input type=\"tel\" id=\"phone\" className=\"floatLabel\" name=\"phone\"></input>\n      <label for=\"phone\">Phone</label>\n    </div>\n      <div className=\"grid\">\n        <div className=\"col-2-3\">\n          <div className=\"controls\">\n           <input type=\"text\" id=\"street\" class=\"floatLabel\" name=\"street\"></input>\n           <label for=\"street\">Street</label>\n          </div>          \n        </div>\n        <div className=\"col-1-3\">\n          <div className=\"controls\">\n            <input type=\"number\" id=\"street-number\" class=\"floatLabel\" name=\"street-number\"></input>\n            <label for=\"street-number\">House No.</label>\n          </div>         \n        </div>\n      </div>\n      <div className=\"grid\">\n        <div className=\"col-2-3\">\n          <div className=\"controls\">\n            <input type=\"text\" id=\"city\" class=\"floatLabel\" name=\"city\"></input>\n            <label for=\"city\">City</label>\n          </div>         \n        </div>\n        <div className=\"col-1-3\">\n          <div className=\"controls\">\n            <input type=\"text\" id=\"post-code\" class=\"floatLabel\" name=\"post-code\"></input>\n            <label for=\"post-code\">Post Code</label>\n          </div>         \n        </div>\n      </div>\n      <div class=\"controls\">\n        <input type=\"text\" id=\"country\" class=\"floatLabel\" name=\"country\"></input>\n        <label for=\"country\">Country</label>\n      </div>\n  </div>\n  \n  <div class=\"form-group\">\n    <h2 class=\"heading\">Car Details</h2>\n    \n     <div class=\"grid\"> \n       <div class=\"col-1-3\">\n   <div class=\"controls\">\n        <input type=\"text\" id=\"regno\" class=\"floatLabel\" name=\"regno\"></input>\n        <label for=\"regno\">Reg. Number</label>\n   </div>\n</div>\n       <button type=\"submit\" value=\"Search\" class=\"col-1-4\" id=\"btnReg\">Search for Reg. No.</button>\n    </div> \n    <div class=\"grid\"> \n       <div class=\"col-1-3\">\n   <div class=\"controls\">\n        <input type=\"text\" id=\"carmodel\" class=\"floatLabel\" name=\"carmodel\"></input>\n        <label for=\"carmodel\">Car Model</label>\n   </div>\n</div>       \n       \n       <div class=\"col-1-3\">\n   <div class=\"controls\">\n        <input type=\"number\" id=\"something\" class=\"floatLabel\" name=\"something\"></input>\n        <label for=\"something\">Something</label>\n   </div>\n</div>\n    </div>\n    \n    <div class=\"grid\">\n    <div class=\"col-1-4 col-1-4-sm\">\n      <div class=\"controls\">\n        <input type=\"date\" id=\"regyear\" class=\"floatLabel\" name=\"regyear\" value=\"\"></input>\n        <label for=\"regyear\" class=\"label-date\"><i class=\"fa fa-calendar\"></i>  Reg. Year</label>\n      </div>      \n    </div>\n    <div class=\"col-1-4 col-1-4-sm\">\n      <div class=\"controls\">\n        <input type=\"date\" id=\"modelyear\" class=\"floatLabel\" name=\"modelyear\"/>\n        <label for=\"modelyear\" class=\"label-date\"><i class=\"fa fa-calendar\"></i>  Model Year</label>\n      </div>      \n    </div> \n    </div>\n     \n     </div>\n\n      <div class=\"grid\">\n        <p class=\"info-text\">Any other information we should know about? Let us know below:</p>\n        <br/>\n        <div class=\"controls\">\n          <textarea name=\"comments\" class=\"floatLabel\" id=\"comments\"></textarea>\n          <label for=\"comments\">Comments</label>\n          </div>\n            <button type=\"submit\" value=\"Submit\" class=\"col-1-4\">Submit</button>\n      </div>  \n</>\n\t)\n}\nexport default Admin;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from \"react\";\n\nconst FavoriteCards = (props) => {\n    return <div>\n        <h1>\n            {props.title}\n        </h1>\n        <div>\n            <img src={props.imageUrl} alt=\"cars\" />\n        </div>\n            <p>\n                {props.description}\n            </p>\n    </div>\n}\n\nexport default FavoriteCards;","export default __webpack_public_path__ + \"static/media/car.b8f91997.jpg\";","export default __webpack_public_path__ + \"static/media/car2.18508744.jpg\";","import React, { useState, useEffect } from 'react';\nimport FavoritesCards from '../components/FavoritesCards.jsx';\nimport Car from \"../assets/car.jpg\"\nimport Car2 from \"../assets/car2.jpg\"\n\n// import { deleteCar } from '../'\n// import { deleteCar } from '../utils/'\n// import { removeCarId } from '../';\n// import Auth from '../utils/auth';\n\nconst WatchList = () => {\n    \n    // const userDataLength = Object.keys(userData).length;\n    const dummyData = [\n        {\n          id: 1,\n          title: \"Benz\",\n          imageUrl : Car2,\n          description:\n            \" Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur porro vitae voluptas! Atque esse voluptatum voluptatem repellat quo laudantium quidem aspernatur\",\n          price : \"$100k\"\n        },\n        {\n          id: 2,\n          title: \"Toyota\",\n          imageUrl : Car,\n          description:\n            \" Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur porro vitae voluptas! Atque esse voluptatum voluptatem repellat quo laudantium quidem aspernatur\",\n          price : \"$100k\"\n          \n        },\n        {\n          id: 3,\n          title: \"Kia\",\n          imageUrl : Car,\n          description:\n            \" Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur porro vitae voluptas! Atque esse voluptatum voluptatem repellat quo laudantium quidem aspernatur\",\n          price : \"$100k\"\n        },\n        {\n          id: 4,\n          title: \"Ford\",\n          imageUrl : Car,\n          description:\n            \" Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur porro vitae voluptas! Atque esse voluptatum voluptatem repellat quo laudantium quidem aspernatur\",\n          price : \"$100k\"\n        }\n      ];\n  \n\nreturn (\n    <div style={{display: \"flex\", flexWrap : \"wrap\"}}>{\n      // userDataLength > 0 ?\n      dummyData.map((props)=> (\n        <FavoritesCards key={props.id} {...props}  />\n      )) \n      // : <h1>You have no favorites yet</h1>\n    }\n    </div>\n)\n\n\n\n}\n\n\nexport default WatchList;\n\n\n\n"," import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\n//import Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport { CarProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\nimport Admin from './pages/Admin';\nimport OrderHistory from './pages/OrderHistory';\nimport WatchList from './pages/WatchList'\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <CarProvider>\n            <Nav />\n            <Routes>\n\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route\n                path=\"/Admin\"\n                element={<Admin />}\n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              <Route \n                path=\"/success\" \n                element={<Success />} \n              />\n              <Route \n                path=\"/orderHistory\" \n                element={<OrderHistory />} \n              />\n              {/* <Route \n                path=\"/products/:id\" \n                element={<Detail />} \n              /> */}\n              <Route \n                path=\"/watch-list\"\n                element={<WatchList />}\n                />\n              <Route \n                path=\"*\" \n                element={<NoMatch />} \n              />\n\n            </Routes>\n          </CarProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./mainStyles.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}